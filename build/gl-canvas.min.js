"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const t=["alpha","depth","stencil","antialias","desynchronized"];class e extends UIEvent{constructor(t,e){super(t,{bubbles:!1}),this.entry=e,this.size=e.target.size}}class s extends HTMLElement{constructor(){super(),this._gl=null,this._requestId=null,this._contextLost=!1,this._contextAttributes={},this._pixelRatio=window.devicePixelRatio,this._setup=null,this._render=null,this._resize=null,this._dispose=null,this._ctxLost=t=>{t.preventDefault(),cancelAnimationFrame(this._requestId),console.info("[GLCanvas] Context lost"),this._contextLost=!0},this._ctxRestored=()=>{console.info("[GLCanvas] Context restored"),this._contextLost=!1,this._initGL(!0)},this._canvas=document.createElement("canvas");const t=this.attachShadow({mode:"closed"});t.appendChild(this.constructor.style),t.appendChild(this._canvas)}static get style(){return this._style||(this._style=document.createElement("style"),this._style.textContent="\n  :host { display: block }\n  :host([hidden]) { display: none }\n\n  canvas {\n    width: 100%;\n    height: 100%;\n    display: block;\n  }"),this._style}static get resizeObserver(){return this._resizeObserver||(this._resizeObserver=new ResizeObserver(t=>{for(const s of t){if(s.target._contextLost)continue;const t=new e("resize",s);if(s.target.dispatchEvent(t)){const t=s.target._canvas,[e,i]=s.target.size;t.width===e&&t.height===i||(t.width=e,t.height=i)}}})),this._resizeObserver}get size(){return[this._canvas.clientWidth*this.pixelRatio,this._canvas.clientHeight*this.pixelRatio]}get setup(){return this._setup}set setup(t){this._setup="function"==typeof t?t:null,this._initGL(null)}get render(){return this._render}set render(t){void 0!==t&&(cancelAnimationFrame(this._requestId),this._render="function"==typeof t?t:null,this._initRAF())}get onresize(){return this._resize}set onresize(t){void 0!==t&&(this.removeEventListener("resize",this._resize),"function"==typeof t?(this._resize=t,this.addEventListener("resize",this._resize),this._resize({size:this.size})):this._resize=null)}get dispose(){return this._dispose}set dispose(t){void 0!==t&&(this._dispose="function"==typeof t?t:null)}get pixelRatio(){return this._pixelRatio}set pixelRatio(t){this._pixelRatio=parseFloat(t)||window.devicePixelRatio}get contextAttributes(){return this._contextAttributes}set contextAttributes(t){Object.assign(this._contextAttributes,t)}get gl(){if(null===this._gl){const t=this._canvas.getContext("webgl",Object.freeze(this._contextAttributes));null===t&&console.warn("could not initialize WebGL"),this._gl=t}return this._gl}connectedCallback(){this.constructor.resizeObserver.observe(this),this._canvas.addEventListener("webglcontextlost",this._ctxLost,!1),this._canvas.addEventListener("webglcontextrestored",this._ctxRestored,!1);const e=function(t){const e="premultiplied"===t;return{alpha:"straight"===t||e,premultipliedAlpha:e}}(this.getAttribute("alpha")),s=function(t){switch(t){case"low-power":case"high-performance":return t;default:return"default"}}(this.getAttribute("power")),i=this.hasAttribute("preserve"),n=this.hasAttribute("caveat");this._contextAttributes={...Object.fromEntries(t.map(t=>[t,this.hasAttribute(t)])),...e,powerPreference:s,preserveDrawingBuffer:i,failIfMajorPerformanceCaveat:n},this._initGL(!1)}disconnectedCallback(){this.constructor.resizeObserver.unobserve(this),this._canvas.removeEventListener("webglcontextlost",this._ctxLost,!1),this._canvas.removeEventListener("webglcontextrestored",this._ctxRestored,!1),null!==this.dispose&&this.dispose()}_initGL(t){if(null===this.setup||null===this.gl)return;const e=this.setup(this.gl,t);e&&(this.render=e.render,this.dispose=e.dispose,this.onresize=e.onresize,this._initRAF())}_initRAF(){if(null===this.render)return;const t=e=>{this._contextLost||(this.render(e),this._requestId=requestAnimationFrame(t))};this._requestId=requestAnimationFrame(t)}toBlob(t,e){return new Promise((s,i)=>{try{this._canvas.toBlob(s,t,e)}catch(t){i(t)}})}toDataURL(t,e){return this._canvas.toDataURL(t,e)}}"customElements"in window&&window.customElements.define("gl-canvas",s),exports.GLCanvas=s;
